services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-tracker-frontend-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NUXT_PUBLIC_API_BASE=http://backend:8080/api/v1
    depends_on:
      - backend
    networks:
      - task-tracker-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      target: production
    container_name: task-tracker-backend-prod
    ports:
      - "8080:8080"
    environment:
      - ENV=production
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      # Production secrets should be provided via environment variables or secrets management
      - SESSION_SECRET=${SESSION_SECRET:-change-this-in-production}
      - SMTP_HOST=${SMTP_HOST:-smtp.example.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_FROM=${SMTP_FROM:-noreply@example.com}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000}
    depends_on:
      - redis
    networks:
      - task-tracker-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: task-tracker-redis-prod
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - task-tracker-network
    restart: unless-stopped

volumes:
  redis-data:

networks:
  task-tracker-network:
    driver: bridge